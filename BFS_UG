int n,m;
cin>>n>>m;
vector <int> ed[n]; //stores edges and weights
for(int i=0;i<m;i++){
    int x,y;
    cin>>x>>y;
    x--;  // 1-indexed based input
    y--;
    ed[x].push_back(y);
    ed[y].push_back(x); //remove for directed
}
vector<int> comp(n,-1);  // used to label sub-graphs

int c=-1;
queue<int> q;

for(int i=0;i<n;i++){
    c=i;
    q.push(i);
    
    while(!q.empty()){
        int l=q.size();
        while(l--){
            int node=q.front();
            q.pop();
            
            if(comp[node]==-1)comp[node]=c;
            
            for(auto j:ed[node]){
                q.push(j);
            }
        }
    }
}
