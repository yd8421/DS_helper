void dfs(vector<vector<int>>& arr, int node,vector<int>& visited, vector<int>& disc,vector<int>& low, vector<int>& ap,int timer, int parent){
    
    int children = 0;
    disc[node] = low[node] = ++timer;
    
    visited[node] = 1;
    for(auto i : arr[node]){
        if(visited[i] == 0){
            children++;
            dfs(arr,i,visited,disc,low,ap,timer,node);
            
            low[node] = min(low[node],low[i]);
            
            if (parent != -1 && low[i] >= disc[node]){
                ap[node] = 1;
            }
        }else if(i != parent){
            low[node] = min(low[node],disc[i]);
        }
    }
    
    if (parent == -1 && children > 1){
        ap[node] = 1;
    }
    
}
